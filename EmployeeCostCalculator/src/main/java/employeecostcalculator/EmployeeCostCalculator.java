/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package employeecostcalculator;

import java.text.DecimalFormat;
import java.util.ArrayList;
import javax.swing.ButtonGroup;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author dillon
 */
public class EmployeeCostCalculator extends javax.swing.JFrame {

    /**
     * Creates new form EmployeeCostCalculator
     */
    
    ArrayList<FullTimeEmployee> ftEmployee;
    ArrayList<PartTimeEmployee> ptEmployee;
    DecimalFormat money;
    
    public EmployeeCostCalculator() {
        initComponents();
        
        ButtonGroup employment = new ButtonGroup();
        employment.add(partTimeRB);
        employment.add(fullTimeRB);
        
        this.setResizable(false);
        
        ftEmployee = new ArrayList<>();
        ptEmployee = new ArrayList<>();
        
        money = new DecimalFormat("$###,##0.00");
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        partTimeRB = new javax.swing.JRadioButton();
        fullTimeRB = new javax.swing.JRadioButton();
        empNameLBL = new javax.swing.JLabel();
        empHourSalLBL = new javax.swing.JLabel();
        empHoursWorkedLBL = new javax.swing.JLabel();
        empNameTF = new javax.swing.JTextField();
        empHourSalTF = new javax.swing.JTextField();
        empHoursWorkedTF = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        empJobTitleTF = new javax.swing.JTextField();
        createEmployeeButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        employeeTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        employeeList = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        employeeTextPane = new javax.swing.JTextPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        totalBiweeklyCostLBL = new javax.swing.JLabel();
        totalMonthlyCostLBL = new javax.swing.JLabel();
        totalAnnualCostLBL = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        totalPTBiweeklyCostLBL = new javax.swing.JLabel();
        totalPTMonthlyCostLBL = new javax.swing.JLabel();
        totalPTAnnualCostLBL = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        totalFTBiweeklyCostLBL = new javax.swing.JLabel();
        totalFTMonthlyCostLBL = new javax.swing.JLabel();
        totalFTAnnualCostLBL = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Employee Cost Calculator");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Is employee part/full time:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12))); // NOI18N

        partTimeRB.setSelected(true);
        partTimeRB.setText("Part Time");
        partTimeRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                partTimeRBActionPerformed(evt);
            }
        });

        fullTimeRB.setText("Full Time");
        fullTimeRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fullTimeRBActionPerformed(evt);
            }
        });

        empNameLBL.setText("Employee Name:");

        empHourSalLBL.setText("Employee Hourly Rate:");

        empHoursWorkedLBL.setText("Number of Hours Worked:");

        empNameTF.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                empNameTFCaretUpdate(evt);
            }
        });

        empHourSalTF.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                empHourSalTFCaretUpdate(evt);
            }
        });

        empHoursWorkedTF.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                empHoursWorkedTFCaretUpdate(evt);
            }
        });

        jLabel1.setText("Employee Job Title:");

        empJobTitleTF.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                empJobTitleTFCaretUpdate(evt);
            }
        });

        createEmployeeButton.setText("Create Employee");
        createEmployeeButton.setEnabled(false);
        createEmployeeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createEmployeeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(empHoursWorkedLBL)
                        .addGap(18, 18, 18)
                        .addComponent(empHoursWorkedTF, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(empNameLBL)
                            .addComponent(jLabel1)
                            .addComponent(empHourSalLBL))
                        .addGap(41, 41, 41)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(empJobTitleTF, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(empHourSalTF, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(empNameTF)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(partTimeRB)
                        .addGap(18, 18, 18)
                        .addComponent(fullTimeRB))
                    .addComponent(createEmployeeButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(partTimeRB)
                    .addComponent(fullTimeRB))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(empNameLBL)
                    .addComponent(empNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(empJobTitleTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(empHourSalLBL)
                    .addComponent(empHourSalTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(empHoursWorkedLBL)
                    .addComponent(empHoursWorkedTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(createEmployeeButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        employeeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Employee Name", "Employee Title", "Employment Status", "Annual Pay"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        employeeTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(employeeTable);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "Pick employee from list to learn more about them:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12))); // NOI18N

        employeeList.setModel(new DefaultListModel());
        employeeList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        employeeList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                employeeListValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(employeeList);

        employeeTextPane.setEditable(false);
        jScrollPane3.setViewportView(employeeTextPane);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane3))
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "All costs are calculated here for you:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12))); // NOI18N

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "General total costs:"));

        jLabel2.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel2.setText("Total cost every 2 weeks:");

        jLabel3.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel3.setText("Total Cost every month:");

        jLabel4.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel4.setText("Total Annual costs:");

        totalBiweeklyCostLBL.setText("$0.00");

        totalMonthlyCostLBL.setText("$0.00");

        totalAnnualCostLBL.setText("$0.00");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(62, 62, 62)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(totalBiweeklyCostLBL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(totalMonthlyCostLBL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(totalAnnualCostLBL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(totalBiweeklyCostLBL))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(totalMonthlyCostLBL))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(totalAnnualCostLBL))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "Part time employee costs:"));

        jLabel6.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel6.setText("Total Cost every month:");

        jLabel5.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel5.setText("Total cost every 2 weeks:");

        jLabel7.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel7.setText("Total Annual costs:");

        totalPTBiweeklyCostLBL.setText("$0.00");

        totalPTMonthlyCostLBL.setText("$0.00");

        totalPTAnnualCostLBL.setText("$0.00");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addGap(65, 65, 65)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(totalPTBiweeklyCostLBL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(totalPTMonthlyCostLBL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(totalPTAnnualCostLBL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(totalPTBiweeklyCostLBL))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(totalPTMonthlyCostLBL))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(totalPTAnnualCostLBL))
                .addContainerGap())
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "Full time employee costs:"));

        jLabel10.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel10.setText("Total Annual costs:");

        jLabel8.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel8.setText("Total cost every 2 weeks:");

        jLabel9.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel9.setText("Total Cost every month:");

        totalFTBiweeklyCostLBL.setText("$0.00");

        totalFTMonthlyCostLBL.setText("$0.00");

        totalFTAnnualCostLBL.setText("$0.00");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addGap(67, 67, 67)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(totalFTBiweeklyCostLBL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(totalFTMonthlyCostLBL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(totalFTAnnualCostLBL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(totalFTBiweeklyCostLBL))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(totalFTMonthlyCostLBL))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(totalFTAnnualCostLBL))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 576, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void partTimeRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_partTimeRBActionPerformed
        
        empHourSalLBL.setText("Employee Hourly Rate:");
        empHoursWorkedLBL.setVisible(true);
        empHoursWorkedTF.setVisible(true);
        
    }//GEN-LAST:event_partTimeRBActionPerformed

    private void fullTimeRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fullTimeRBActionPerformed
        
        empHourSalLBL.setText("Employee Annual Salary:");
        empHoursWorkedLBL.setVisible(false);
        empHoursWorkedTF.setVisible(false);
        empHoursWorkedTF.setText("");
        
    }//GEN-LAST:event_fullTimeRBActionPerformed

    private void empNameTFCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_empNameTFCaretUpdate
        
        if(fullTimeRB.isSelected()){
            if(empNameTF.getText().equals("") || empNameTF.getText().startsWith(" ") 
                    || empJobTitleTF.getText().equals("") || empJobTitleTF.getText().startsWith(" ")
                    || empHourSalTF.getText().equals("") || empHourSalTF.getText().startsWith(" ")){

                createEmployeeButton.setEnabled(false);

            }
            else{
                createEmployeeButton.setEnabled(true);
            }
        }
        else if(partTimeRB.isSelected()){
            if(empNameTF.getText().equals("") || empNameTF.getText().startsWith(" ") 
                    || empJobTitleTF.getText().equals("") || empJobTitleTF.getText().startsWith(" ")
                    || empHourSalTF.getText().equals("") || empHourSalTF.getText().startsWith(" ")
                    || empHoursWorkedTF.getText().equals("") || empHoursWorkedTF.getText().startsWith(" ")){

                createEmployeeButton.setEnabled(false);

            }
            else{
                createEmployeeButton.setEnabled(true);
            }
        }
        
    }//GEN-LAST:event_empNameTFCaretUpdate

    private void empJobTitleTFCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_empJobTitleTFCaretUpdate
        
        if(fullTimeRB.isSelected()){
            if(empNameTF.getText().equals("") || empNameTF.getText().startsWith(" ") 
                    || empJobTitleTF.getText().equals("") || empJobTitleTF.getText().startsWith(" ")
                    || empHourSalTF.getText().equals("") || empHourSalTF.getText().startsWith(" ")){

                createEmployeeButton.setEnabled(false);

            }
            else{
                createEmployeeButton.setEnabled(true);
            }
        }
        else if(partTimeRB.isSelected()){
            if(empNameTF.getText().equals("") || empNameTF.getText().startsWith(" ") 
                    || empJobTitleTF.getText().equals("") || empJobTitleTF.getText().startsWith(" ")
                    || empHourSalTF.getText().equals("") || empHourSalTF.getText().startsWith(" ")
                    || empHoursWorkedTF.getText().equals("") || empHoursWorkedTF.getText().startsWith(" ")){

                createEmployeeButton.setEnabled(false);

            }
            else{
                createEmployeeButton.setEnabled(true);
            }
        }
        
    }//GEN-LAST:event_empJobTitleTFCaretUpdate

    private void empHourSalTFCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_empHourSalTFCaretUpdate
        
        if(fullTimeRB.isSelected()){
            if(empNameTF.getText().equals("") || empNameTF.getText().startsWith(" ") 
                    || empJobTitleTF.getText().equals("") || empJobTitleTF.getText().startsWith(" ")
                    || empHourSalTF.getText().equals("") || empHourSalTF.getText().startsWith(" ")){

                createEmployeeButton.setEnabled(false);

            }
            else{
                createEmployeeButton.setEnabled(true);
            }
        }
        else if(partTimeRB.isSelected()){
            if(empNameTF.getText().equals("") || empNameTF.getText().startsWith(" ") 
                    || empJobTitleTF.getText().equals("") || empJobTitleTF.getText().startsWith(" ")
                    || empHourSalTF.getText().equals("") || empHourSalTF.getText().startsWith(" ")
                    || empHoursWorkedTF.getText().equals("") || empHoursWorkedTF.getText().startsWith(" ")){

                createEmployeeButton.setEnabled(false);

            }
            else{
                createEmployeeButton.setEnabled(true);
            }
        }
        
    }//GEN-LAST:event_empHourSalTFCaretUpdate

    private void empHoursWorkedTFCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_empHoursWorkedTFCaretUpdate
        
        if(fullTimeRB.isSelected()){
            if(empNameTF.getText().equals("") || empNameTF.getText().startsWith(" ") 
                    || empJobTitleTF.getText().equals("") || empJobTitleTF.getText().startsWith(" ")
                    || empHourSalTF.getText().equals("") || empHourSalTF.getText().startsWith(" ")){

                createEmployeeButton.setEnabled(false);

            }
            else{
                createEmployeeButton.setEnabled(true);
            }
        }
        else if(partTimeRB.isSelected()){
            if(empNameTF.getText().equals("") || empNameTF.getText().startsWith(" ") 
                    || empJobTitleTF.getText().equals("") || empJobTitleTF.getText().startsWith(" ")
                    || empHourSalTF.getText().equals("") || empHourSalTF.getText().startsWith(" ")
                    || empHoursWorkedTF.getText().equals("") || empHoursWorkedTF.getText().startsWith(" ")){

                createEmployeeButton.setEnabled(false);

            }
            else{
                createEmployeeButton.setEnabled(true);
            }
        }
        
    }//GEN-LAST:event_empHoursWorkedTFCaretUpdate

    private void createEmployeeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createEmployeeButtonActionPerformed
        
        PartTimeEmployee pt = new PartTimeEmployee();
        FullTimeEmployee ft = new FullTimeEmployee();
        
        try{
            
            // If you are creating a part time employee
            if(partTimeRB.isSelected()){
                pt.setName(empNameTF.getText());
                pt.setJobTitle(empJobTitleTF.getText());
                pt.setHourlyPay(Double.parseDouble(empHourSalTF.getText()));
                pt.setHoursWorked(Integer.parseInt(empHoursWorkedTF.getText()));
                pt.setBiweeklyPay(Double.parseDouble(empHourSalTF.getText()), Integer.parseInt(empHoursWorkedTF.getText()));
                
                ptEmployee.add(pt);
                
                updateEverything();
                
                empNameTF.setText("");
                empJobTitleTF.setText("");
                empHourSalTF.setText("");
                empHoursWorkedTF.setText("");
                
            }
            
            // If you are creating a full time employee
            if(fullTimeRB.isSelected()){
                ft.setName(empNameTF.getText());
                ft.setJobTitle(empJobTitleTF.getText());
                ft.setSalary(Double.parseDouble(empHourSalTF.getText()));
                ft.setBiweeklyPay(Double.parseDouble(empHourSalTF.getText()));
                
                ftEmployee.add(ft);
                
                // Update all tables, lists and labels with new employee information
                updateEverything();
                
                // Reset all textfields
                empNameTF.setText("");
                empJobTitleTF.setText("");
                empHourSalTF.setText("");
                empHoursWorkedTF.setText("");
                
            }
            
        }catch(NumberFormatException n){
            JOptionPane.showMessageDialog(null, "You have entered an incorrect value into one of the textfields, "
                    + "please correct this issue.");
        }
        
    }//GEN-LAST:event_createEmployeeButtonActionPerformed

    private void employeeListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_employeeListValueChanged
        
//        for(int i = 0; i < ptEmployee.size(); i++){
//            
//            if(employeeList.getSelectedValue().equals(ptEmployee.get(i).getName())){
//                employeeTextPane.setText("Name : " + ptEmployee.get(i).getName() + "\n"
//                + "Job Title: " + ptEmployee.get(i).getJobTitle() + "\n"
//                + "Employee Status: " + "Part time" + "\n" 
//                        + "Hourly Pay: " + money.format(ptEmployee.get(i).getHourlyPay()) + "\n"
//                + "Biweekly Pay: " + money.format(ptEmployee.get(i).getBiweeklyPay()) + "\n"
//                + "Monthly Pay: " + money.format(ptEmployee.get(i).getBiweeklyPay() * 2) + "\n"
//                + "Annual Pay: " + money.format(ptEmployee.get(i).getBiweeklyPay() * 26));
//            }
//            
//        }
        
    }//GEN-LAST:event_employeeListValueChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmployeeCostCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmployeeCostCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmployeeCostCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmployeeCostCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EmployeeCostCalculator().setVisible(true);
            }
        });
    }
    
    public void updateEverything(){
        
        DefaultListModel empList = (DefaultListModel) employeeList.getModel();
        DefaultTableModel empTable = (DefaultTableModel) employeeTable.getModel();
        
        // remove all names from the employee list, if applicable.
        // This allows for the list to be updated.
        empList.removeAllElements();
        
        // Updating the employee List
        // If there are both full time and part time employees that have been
        // initialized, fill out the list with their names.
        if(ptEmployee.size() > 0 && ftEmployee.size() > 0){
            for(int i = 0; i < ptEmployee.size(); i++){
                empList.addElement(ptEmployee.get(i).getName());
            }
            
            for(int i = 0; i < ftEmployee.size(); i++){
                empList.addElement(ftEmployee.get(i).getName());
            }
            
        }
        // If only part time employees have been initialized, fill out the list with their names.
        else if(ptEmployee.size() > 0 && ftEmployee.size() < 1){
            for(int i = 0; i < ptEmployee.size(); i++){
                empList.addElement(ptEmployee.get(i).getName());
            }
        }
        // If only full time employees have been initialized, fill out the list with their names.
        else if(ftEmployee.size() > 0 && ptEmployee.size() < 1){
            for(int i = 0; i < ftEmployee.size(); i++){
                empList.addElement(ftEmployee.get(i).getName());
            }
        }
        // End of populating employee list.
        
        
        // Clear the employee table to allow for the upadated table contents.
        for(int i = empTable.getRowCount() - 1; i >= 0; i--){
            empTable.removeRow(i);
        }
        
        // Populate the employee table with all of the employees
        // Populating the employee table with all part time employees
        for(int i = 0; i < ptEmployee.size(); i++){
            double annualPay = ptEmployee.get(i).getBiweeklyPay() * 26;
            Object ptRows[] = {ptEmployee.get(i).getName(), ptEmployee.get(i).getJobTitle(), 
                "Part time", money.format(annualPay)};
            empTable.addRow(ptRows);
        }
        
        // Populating the employee table with all full time employees
        for(int i = 0; i < ftEmployee.size(); i++){
            Object ftRows[] = {ftEmployee.get(i).getName(), ftEmployee.get(i).getJobTitle(), 
                "Full time", money.format(ftEmployee.get(i).getSalary())};
            empTable.addRow(ftRows);
        }
        // End of employee table population
        
        
        double genBiweeklyCost = 0.00;
        double genMonthlyCost = 0.00;
        double genAnnualCost = 0.00;
        
        double ptBiweeklyCost = 0.00;
        double ptMonthlyCost = 0.00;
        double ptAnnualCost = 0.00;
        
        double ftBiweeklyCost = 0.00;
        double ftMonthlyCost = 0.00;
        double ftAnnualCost = 0.00;
        
        for(int i = 0; i < ptEmployee.size(); i++){
            ptBiweeklyCost += ptEmployee.get(i).getBiweeklyPay();
            ptMonthlyCost += ptEmployee.get(i).getBiweeklyPay() * 2;
            ptAnnualCost += ptEmployee.get(i).getBiweeklyPay() * 26;
        }
        
        for(int i = 0; i < ftEmployee.size(); i++){
            ftBiweeklyCost += ftEmployee.get(i).getBiweeklyPay();
            ftMonthlyCost += ftEmployee.get(i).getBiweeklyPay() * 2;
            ftAnnualCost += ftEmployee.get(i).getBiweeklyPay() * 26;
        }
        
        genBiweeklyCost = ptBiweeklyCost + ftBiweeklyCost;
        genMonthlyCost = ptMonthlyCost + ftMonthlyCost;
        genAnnualCost = ptAnnualCost + ftAnnualCost;
        
        totalBiweeklyCostLBL.setText(money.format(genBiweeklyCost));
        totalMonthlyCostLBL.setText(money.format(genMonthlyCost));
        totalAnnualCostLBL.setText(money.format(genAnnualCost));
        
        totalPTBiweeklyCostLBL.setText(money.format(ptBiweeklyCost));
        totalPTMonthlyCostLBL.setText(money.format(ptMonthlyCost));
        totalPTAnnualCostLBL.setText(money.format(ptAnnualCost));
        
        totalFTBiweeklyCostLBL.setText(money.format(ftBiweeklyCost));
        totalFTMonthlyCostLBL.setText(money.format(ftMonthlyCost));
        totalFTAnnualCostLBL.setText(money.format(ftAnnualCost));
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton createEmployeeButton;
    private javax.swing.JLabel empHourSalLBL;
    private javax.swing.JTextField empHourSalTF;
    private javax.swing.JLabel empHoursWorkedLBL;
    private javax.swing.JTextField empHoursWorkedTF;
    private javax.swing.JTextField empJobTitleTF;
    private javax.swing.JLabel empNameLBL;
    private javax.swing.JTextField empNameTF;
    private javax.swing.JList<String> employeeList;
    private javax.swing.JTable employeeTable;
    private javax.swing.JTextPane employeeTextPane;
    private javax.swing.JRadioButton fullTimeRB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JRadioButton partTimeRB;
    private javax.swing.JLabel totalAnnualCostLBL;
    private javax.swing.JLabel totalBiweeklyCostLBL;
    private javax.swing.JLabel totalFTAnnualCostLBL;
    private javax.swing.JLabel totalFTBiweeklyCostLBL;
    private javax.swing.JLabel totalFTMonthlyCostLBL;
    private javax.swing.JLabel totalMonthlyCostLBL;
    private javax.swing.JLabel totalPTAnnualCostLBL;
    private javax.swing.JLabel totalPTBiweeklyCostLBL;
    private javax.swing.JLabel totalPTMonthlyCostLBL;
    // End of variables declaration//GEN-END:variables
}
