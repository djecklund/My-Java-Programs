/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gpacalculator;

import java.text.DecimalFormat;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Dillon
 */
public class GPACalculatorFrame extends javax.swing.JFrame {

    /**
     * Creates new form GPACalculatorFrame
     */
    
    ArrayList<ClassInfo> classInfo;
    ArrayList<String> searchOptions;
    boolean isBeingModified;
    
    DecimalFormat gpaFormat = new DecimalFormat("###.00");
    
    public GPACalculatorFrame() {
        initComponents();
        
        this.setResizable(false);
        
        classInfo = new ArrayList<>();
        searchOptions = new ArrayList<>();
        isBeingModified = false;
        
        // Read through the excel spreadsheet and add the classes to the results table and remove list        
        CollectClassInfo collect = new CollectClassInfo();
        collect.collectClassInfo();
        classInfo = collect.getClassInfo();
                
        // Set up the combobox for querying specific results
        PossibleSearchOptions options = new PossibleSearchOptions();
        searchOptions = options.setUpSearchOptions(classInfo);
        
        for(int i = 0; i < searchOptions.size(); i++){
            pickSubjectCB.addItem(searchOptions.get(i));
        }
        
        updateResultsTable();
        updateRemoveClassList();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        resultsTable = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        pickSubjectCB = new javax.swing.JComboBox<>();
        gpaLBL = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        subjectTF = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        classTitleTF = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        gradeCB = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        creditHoursTF = new javax.swing.JTextField();
        addModClassButton = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        removeClassList = new javax.swing.JList<>();
        removeClassButton = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        exportCB = new javax.swing.JComboBox<>();
        exportButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        exportSampleTA = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Calculate your GPA");

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        resultsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Subject", "Title", "Grade", "Credit hours", "Quality Points"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(resultsTable);
        if (resultsTable.getColumnModel().getColumnCount() > 0) {
            resultsTable.getColumnModel().getColumn(0).setMinWidth(100);
            resultsTable.getColumnModel().getColumn(0).setMaxWidth(100);
            resultsTable.getColumnModel().getColumn(2).setMinWidth(45);
            resultsTable.getColumnModel().getColumn(2).setMaxWidth(45);
            resultsTable.getColumnModel().getColumn(3).setMinWidth(80);
            resultsTable.getColumnModel().getColumn(3).setMaxWidth(80);
            resultsTable.getColumnModel().getColumn(4).setMinWidth(100);
            resultsTable.getColumnModel().getColumn(4).setMaxWidth(100);
        }

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Query Specific Classes:"));

        pickSubjectCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All" }));
        pickSubjectCB.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                pickSubjectCBItemStateChanged(evt);
            }
        });

        gpaLBL.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        gpaLBL.setText("Your GPA is: ");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pickSubjectCB, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(gpaLBL, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(gpaLBL, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pickSubjectCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 34, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 614, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Results", jPanel2);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Add a new Class"));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setText("Subject:");

        subjectTF.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                subjectTFCaretUpdate(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel2.setText("Class Title:");

        classTitleTF.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                classTitleTFCaretUpdate(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel3.setText("Grade:");

        gradeCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A", "B", "C", "D", "F" }));

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel4.setText("Credit Hours:");

        creditHoursTF.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                creditHoursTFCaretUpdate(evt);
            }
        });

        addModClassButton.setText("Add Class");
        addModClassButton.setEnabled(false);
        addModClassButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addModClassButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(subjectTF, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(classTitleTF, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(creditHoursTF, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gradeCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(addModClassButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(subjectTF, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(classTitleTF, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(gradeCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(creditHoursTF, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addModClassButton)
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Remove a Class"));

        removeClassList.setModel(new DefaultListModel());
        removeClassList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        removeClassList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                removeClassListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(removeClassList);

        removeClassButton.setText("Remove Class");
        removeClassButton.setEnabled(false);
        removeClassButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeClassButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(removeClassButton)
                        .addGap(0, 111, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 311, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removeClassButton)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Add/Remove Classes", jPanel1);

        jLabel5.setText("Choose a format to export to:");

        exportCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Excel 2007 & up (xlsx extension)", "Excel older (xls extension)", "Text file (tab delimited)", "Text file (comma separated)", "Text file (pipe delimited)" }));
        exportCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportCBActionPerformed(evt);
            }
        });

        exportButton.setText("Export");
        exportButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportButtonActionPerformed(evt);
            }
        });

        exportSampleTA.setEditable(false);
        exportSampleTA.setColumns(20);
        exportSampleTA.setRows(5);
        exportSampleTA.setText("No way to show a sample of what an excel spreadsheet would look like...");
        jScrollPane3.setViewportView(exportSampleTA);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Sample of the Data:");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(exportCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(exportButton))
                        .addGap(0, 283, Short.MAX_VALUE))
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(exportCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addGap(8, 8, 8)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(exportButton)
                .addContainerGap(51, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Export", jPanel6);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void subjectTFCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_subjectTFCaretUpdate
        
        // Make sure the user cannot add a class unless all infomation is filled out
        if(subjectTF.getText().equals("") || subjectTF.getText().startsWith(" ") 
                || classTitleTF.getText().equals("") || classTitleTF.getText().startsWith(" ")
                || creditHoursTF.getText().equals("") || creditHoursTF.getText().startsWith(" ")){
            
            addModClassButton.setEnabled(false);
        }
        else{
            addModClassButton.setEnabled(true);
        }
        
    }//GEN-LAST:event_subjectTFCaretUpdate

    private void classTitleTFCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_classTitleTFCaretUpdate
        
        // Make sure the user cannot add a class unless all infomation is filled out
        if(subjectTF.getText().equals("") || subjectTF.getText().startsWith(" ") 
                || classTitleTF.getText().equals("") || classTitleTF.getText().startsWith(" ")
                || creditHoursTF.getText().equals("") || creditHoursTF.getText().startsWith(" ")){
            
            addModClassButton.setEnabled(false);
        }
        else{
            addModClassButton.setEnabled(true);
        }
        
    }//GEN-LAST:event_classTitleTFCaretUpdate

    private void creditHoursTFCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_creditHoursTFCaretUpdate
        
        // Make sure the user cannot add a class unless all infomation is filled out
        if(subjectTF.getText().equals("") || subjectTF.getText().startsWith(" ") 
                || classTitleTF.getText().equals("") || classTitleTF.getText().startsWith(" ")
                || creditHoursTF.getText().equals("") || creditHoursTF.getText().startsWith(" ")){
            
            addModClassButton.setEnabled(false);
        }
        else{
            addModClassButton.setEnabled(true);
        }
        
    }//GEN-LAST:event_creditHoursTFCaretUpdate

    private void addModClassButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addModClassButtonActionPerformed
        
        UpdatingClassInfo updateClassInfo = new UpdatingClassInfo();
        
        try{
            
            String subject = subjectTF.getText();
            String title = classTitleTF.getText();
            char grade = gradeCB.getSelectedItem().toString().charAt(0);
            int creditHours = Integer.parseInt(creditHoursTF.getText());
            
            // Determine if user is adding a new class or modifying an already existing class
            ModifyClassInformation modify = new ModifyClassInformation();
            if(isBeingModified == true){
                
                classInfo = modify.modifyClassInfo(classInfo, subject, title, grade, creditHours, removeClassList.getSelectedIndex());
                updateClassInfo.updateClasses(classInfo);
            }
            else{
                // Add the new class to the classInfo ArrayList
                ClassInfo info = new ClassInfo();
                info.setSubject(subjectTF.getText());
                info.setTitle(classTitleTF.getText());
                info.setGrade(grade);
                info.setCreditHours(Integer.parseInt(creditHoursTF.getText()));
                info.setQualityPoints();
                classInfo.add(info);

                // Reset all of the textfields and the grades combobox
                subjectTF.setText("");
                classTitleTF.setText("");
                gradeCB.setSelectedIndex(0);
                creditHoursTF.setText("");

                // Add the new class to the excel spreadsheet
                updateClassInfo.updateClasses(classInfo);

            }
            
            // update the results table and the removal list
            updateResultsTable();
            updateRemoveClassList();
            
        }catch(NumberFormatException num){
            JOptionPane.showMessageDialog(null, "You have input an improper number in the credit hours textfield. Please enter an Integer into the credit hours textfield.");
            creditHoursTF.setText("");
        }
        
    }//GEN-LAST:event_addModClassButtonActionPerformed

    private void removeClassListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_removeClassListValueChanged
        
        // Makes sure the user has a class selected in the remove list before they 
        // try to remove anything or modify it.
        if(removeClassList.getSelectedIndex() < 0){
            removeClassButton.setEnabled(false);
            addModClassButton.setText("Add Class");
            subjectTF.setText("");
            classTitleTF.setText("");
            gradeCB.setSelectedIndex(0);
            creditHoursTF.setText("");
            isBeingModified = false;
        }
        else{
            subjectTF.setText(classInfo.get(removeClassList.getSelectedIndex()).getSubject());
            classTitleTF.setText(classInfo.get(removeClassList.getSelectedIndex()).getTitle());
            
            switch(classInfo.get(removeClassList.getSelectedIndex()).getGrade()){
                case 'A':
                    gradeCB.setSelectedIndex(0);
                    break;
                case 'B':
                    gradeCB.setSelectedIndex(1);
                    break;
                case 'C':
                    gradeCB.setSelectedIndex(2);
                    break;
                case 'D':
                    gradeCB.setSelectedIndex(3);
                    break;
                case 'F':
                    gradeCB.setSelectedIndex(4);
            }
            
            creditHoursTF.setText("" + classInfo.get(removeClassList.getSelectedIndex()).getCreditHours());
            addModClassButton.setText("Modify Class");
            removeClassButton.setEnabled(true);
            isBeingModified = true;
        }
        
    }//GEN-LAST:event_removeClassListValueChanged

    private void removeClassButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeClassButtonActionPerformed
        
        // Removes the class from the classInfo ArrayList and the excel spreadsheet
        classInfo.remove(removeClassList.getSelectedIndex());
        UpdatingClassInfo update = new UpdatingClassInfo();
        update.updateClasses(classInfo);
        
        // Update both the results table and removal list
        updateResultsTable();
        updateRemoveClassList();
        
    }//GEN-LAST:event_removeClassButtonActionPerformed

    private void pickSubjectCBItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_pickSubjectCBItemStateChanged
        
        search();
        
    }//GEN-LAST:event_pickSubjectCBItemStateChanged

    private void exportButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportButtonActionPerformed
        
        Export export = new Export();
        export.exportToFile(classInfo, exportCB.getSelectedItem().toString());
        
    }//GEN-LAST:event_exportButtonActionPerformed

    private void exportCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportCBActionPerformed
        
        exportSampleTA.setText("");
        
        Export export = new Export();
        String exportSampleData[] = export.giveASample(classInfo, exportCB.getSelectedItem().toString()).split(";");
        
        for(int i = 0; i < exportSampleData.length; i++){
            exportSampleTA.append(exportSampleData[i]);
            exportSampleTA.append("\n");
        }
        
    }//GEN-LAST:event_exportCBActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GPACalculatorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GPACalculatorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GPACalculatorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GPACalculatorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GPACalculatorFrame().setVisible(true);
            }
        });
    }
    
    // Update the results table
    public void updateResultsTable(){
        
        DefaultTableModel results = (DefaultTableModel) resultsTable.getModel();
        
        // Reset the results table
        for(int i = results.getRowCount() - 1; i >= 0; i--){
            results.removeRow(i);
        }
        
        // Add the data from the classInfo ArrayList into the results table
        for(int i = 0; i < classInfo.size(); i++){
            
            Object info[] = {classInfo.get(i).getSubject(), classInfo.get(i).getTitle(), classInfo.get(i).getGrade(),
                classInfo.get(i).getCreditHours(), classInfo.get(i).getQualityPoints()};
            results.addRow(info);
            
        }
        
        // Display the current GPA after the classInfo ArrayList has been altered
        GPACalculations gpa = new GPACalculations();        
        gpaLBL.setText("Your GPA is: " + gpa.calculateGPA(classInfo));
        
    }
    
    // Update the remove list
    public void updateRemoveClassList(){
        
        DefaultListModel removeList = (DefaultListModel) removeClassList.getModel();
        
        removeList.removeAllElements();
        
        for(int i = 0; i < classInfo.size(); i++){
            removeList.add(i, classInfo.get(i).getTitle());
        }
        
    }
    
    // Search for the selected classes and display them.
    public void search(){
        
        DefaultTableModel results = (DefaultTableModel) resultsTable.getModel();
        
        // Initialize the variables needed for gpa calculation
        double qualityPointsEarned = 0.0;
        double totalCreditHours = 0.0;
        
        // Reset the results table
        for(int i = results.getRowCount() - 1; i >= 0; i--){
            results.removeRow(i);
        }
                
        // Calculate the gpa based on the queried results
        for(int i = 0; i < classInfo.size(); i++){
            if(pickSubjectCB.getSelectedItem().equals(classInfo.get(i).getSubject())){
                
                // Add up the quality points and credit hours for the final gpa
                // calculation.
                qualityPointsEarned += classInfo.get(i).getQualityPoints();
                totalCreditHours += classInfo.get(i).getCreditHours();
                
                // Add the specific classes to the results table
                Object info[] = {classInfo.get(i).getSubject(), classInfo.get(i).getTitle(), classInfo.get(i).getGrade(),
                classInfo.get(i).getCreditHours(), classInfo.get(i).getQualityPoints()};
                results.addRow(info);
                
                // Calculate the gpa and show it in the gpa label.
                double gpa = qualityPointsEarned / totalCreditHours;
                gpaLBL.setText("Your GPA is: " + gpaFormat.format(gpa));
                
            }
        }
        
        // The item at index zero of the combobox is "All".If the first item in the pickSubjectCB (combobox) 
        // is selected, reset the table to show all classes and change the gpa accordingly.
        if(pickSubjectCB.getSelectedIndex() == 0){
            updateResultsTable();
        }
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addModClassButton;
    private javax.swing.JTextField classTitleTF;
    private javax.swing.JTextField creditHoursTF;
    private javax.swing.JButton exportButton;
    private javax.swing.JComboBox<String> exportCB;
    private javax.swing.JTextArea exportSampleTA;
    private javax.swing.JLabel gpaLBL;
    private javax.swing.JComboBox<String> gradeCB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JComboBox<String> pickSubjectCB;
    private javax.swing.JButton removeClassButton;
    private javax.swing.JList<String> removeClassList;
    private javax.swing.JTable resultsTable;
    private javax.swing.JTextField subjectTF;
    // End of variables declaration//GEN-END:variables
}
