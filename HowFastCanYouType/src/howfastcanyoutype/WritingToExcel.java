/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package howfastcanyoutype;

import java.io.IOException;
import java.util.ArrayList;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import jxl.write.WriteException;

/**
 *
 * @author Dillon
 */
public class WritingToExcel extends javax.swing.JFrame {

    /**
     * Creates new form WritingToExcel
     */
    
    String idioms[];
    int counter;
    long start;
    long end;
    
    ArrayList<UserInfo> userInfo;
        
    public WritingToExcel() {
        initComponents();
        
        this.setResizable(false);
        
        // All of the idioms
        idioms = new String[] {"take into account", "as a matter of fact", "first and foremost", 
        "take advantage of", "take care of", "get through", "down the road", "put forward", "get out of", 
        "on the other hand"};
        
        // Initializing the counter, start and end times.
        counter = 0;
        start = 0;
        end = 0;
        
        userInfo = new ArrayList<>();
                
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        idiomLBL = new javax.swing.JLabel();
        idiomTF = new javax.swing.JTextField();
        startButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("How fast do you type");

        idiomLBL.setText("A random Idiom will appear here when start button is clicked");

        idiomTF.setEnabled(false);
        idiomTF.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                idiomTFCaretUpdate(evt);
            }
        });

        startButton.setText("Start");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(startButton)
                    .addComponent(idiomLBL)
                    .addComponent(idiomTF, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(idiomLBL)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(idiomTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(startButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        
        Random rand = new Random();
        
        // Pick a random idiom from the idioms array
        int randomIdiom = rand.nextInt(idioms.length);
        
        // Set the idiom label's text to the randomly selected idiom
        idiomLBL.setText(idioms[randomIdiom]);
        
        // Disable the start button so user cannot click it again
        startButton.setEnabled(false);
        
        // Remove the text from the idiom label if any exists
        // Enable the idiom textfield so the user can type the idiom displayed
        // in the idiom label
        idiomTF.setText("");
        idiomTF.setEnabled(true);
        
        // Set the start variable equal to the current time in miliseconds
        start = System.currentTimeMillis();
        
        // Set the focus on the idiom textfield
        idiomTF.requestFocus();
        
        // Increase the counter by one
        counter++;
        
    }//GEN-LAST:event_startButtonActionPerformed

    private void idiomTFCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_idiomTFCaretUpdate
        
        // Determine if the idiom textfield's text is the same as the idiom label
        if(idiomTF.getText().equals(idiomLBL.getText())){
            
            // Set the end variable equal to the current time
            end = System.currentTimeMillis();
            
            // Create an object of UserInfo and give it the attributes of the idiom that 
            // was randomly selected as well as the time it took for the user to type the idiom
            // The setTotalTime function determines how long it took for the user to type the idiom
            // After creating the object, put it into the userInfo ArrayList
            UserInfo info = new UserInfo();
            info.setIdiom(idiomLBL.getText());
            info.setTotalTime(start, end);
            userInfo.add(info);
            
            // Reset the idiom label, idiom textfield, and the start button to their defaults
            idiomLBL.setText("A random Idiom will appear here when start button is clicked");
            idiomTF.setEnabled(false);
            startButton.setEnabled(true);
            
            // After the user enters the idiom correctly, write the information contained in the userInfo
            // ArrayList into an excel spreadsheet
            AddingDataToExcel addData = new AddingDataToExcel();
            try {
                addData.addDataToExcel(userInfo);
            } catch (IOException ex) {
                Logger.getLogger(WritingToExcel.class.getName()).log(Level.SEVERE, null, ex);
            } catch (WriteException ex) {
                Logger.getLogger(WritingToExcel.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            // Once the counter reaches 20 ( User entered 20 idioms )
            // Make sure the user cannot continue
            if(counter == 20){
                startButton.setEnabled(false);
                idiomTF.setEnabled(false);
                idiomLBL.setText("You have entered the 20 required idioms. Thank you!!!");
            }
                
        }
        
    }//GEN-LAST:event_idiomTFCaretUpdate

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WritingToExcel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WritingToExcel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WritingToExcel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WritingToExcel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new WritingToExcel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel idiomLBL;
    private javax.swing.JTextField idiomTF;
    private javax.swing.JButton startButton;
    // End of variables declaration//GEN-END:variables
}
